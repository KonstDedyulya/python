"""1.Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. 
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
"""
def division():
  """Осуществляет деление двух чисел и возвращает результат."""
  var_1 = int(input('Введите первое число:'))
  while True:
      var_2 = int(input('Введите второе число:'))
      if var_2 ==0:
        print('На ноль делить нельзя!')
      else:
          result = var_1 / var_2
          break
  return result

print(division())


"""2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: 
имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
 Осуществить вывод данных о пользователе одной строкой.
 """
 
 def user_data(first_name, surname, year_birth, city, email, phone):
  print(f"имя: {first_name}; фамилия: {surname}; год рождения: {year_birth}; город проживания: {city}; email: {email}; телефон: {phone}")
    
user_data(first_name='Джон', surname='Терминатор', year_birth=1989, city='Улан-Батор', email='vsempizdets@pochta.mn', phone='+906112332323')


""" 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и 
возвращает сумму наибольших двух аргументов.
"""
def my_func(var_1, var_2, var_3):
    lst = sorted([var_1, var_2, var_3])
    return lst[1] + lst[2]

print(my_func(40, 20, 30))


""" 4. Программа принимает действительное положительное число x и целое отрицательное число y. 
Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). 
При решении задания нужно обойтись без встроенной функции возведения числа в степень. 
Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора *. 
Второй — более сложная реализация без оператора *, предусматривающая использование цикла.
"""
#первый вариант
def my_func(x, y):
  return x**y

print(my_func(2, -4))


#второй вариант
def my_func(x, y):
  a, b = x, x
  for i in range(1, abs(y)):
    for j in range(1, abs(x)):
      a += b
    b = a
     
  return 1 / a

print(my_func(2, -4))


""" 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. 
При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, 
разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме. 
Но если вместо числа вводится специальный символ, выполнение программы завершается. 
Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел 
к полученной ранее сумме и после этого завершить программу.
"""
print('Введите строку чисел, разделённых пробелами.  Для завершения программы введите "0" ')
summ = 0
lst = []
while True:
    s = (int(i) for i in input().split())
    lst = list(s)
    summ += sum(lst)
    print('Сумма:', summ)
    if lst[-1] == 0:
        print('Пока!')
        break


"""" 6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, 
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
"""
def int_func(w):
  return w.title()

print(int_func('text'))


""" 7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. 
Каждое слово состоит из латинских букв в нижнем регистре. 
Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
 Используйте написанную ранее функцию int_func().
 """
 
 def int_func(w):
  return w.title()

print(int_func('text krex pexxx'))
